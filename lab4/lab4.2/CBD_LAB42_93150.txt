// NMEC: 93150

#1
match (ator)-[:ACTED_IN]->(movie)<-[:DIRECTED]-(ator) return distinct ator.name, movie.title

#2
match (a)-[:ACTED_IN]->(m) where m.released > 2005 return collect(a.name) as atores, m.title as filme

#3
match (node1)-[]->(node2) with node1, node2, count(*) as relations where 1 < relations return node1, node2, relations

#4
match (p1)-[:REVIEWED]->(m)<-[:REVIEWED]-(p2) return m.title as filme, p1.name as pessoa_1, p2.name as pessoa_2

#5
match (a1)-[:ACTED_IN]->(m)<-[:ACTED_IN]-(a2) with a1, a2, count(*) as numMovies where numMovies > 1 return a1.name as ator_1, a2.name as ator_2, numMovies 

#6
match (a)-[:ACTED_IN]->(m) where m.title="Apollo 13" return avg(m.released - a.born) as idade_media;

#7
match (a)-[:ACTED_IN]->(m) return m, round(avg(m.released - a.born) * 100) / 100 AS idade_media order by idade_media desc limit 10

#8
match (a)-[:ACTED_IN]->(m) return a,m, avg(m.released - a.born) as idade_media order by idade_media asc limit 1;

#9
match shortest_path = shortestPath((p1:Person {name:"John Cusack"})-[*]-(p2:Person {name:"Demi Moore"})) return p1.name as Person1, shortest_path, p2.name as Person2;

#10
match shortest_path = shortestPath((a:Person {name:"Keanu Reeves"})-[*]-(b:Person {name:"Tom Cruise"})) return length(shortest_path) as Dimensão

#11
match shortest_path = shortestPath((p1:Person)-[*]-(p2:Person)) where p1.name starts with "Jim" and p2.name starts with "Kevin" return p1.name, p2.name, length(shortest_path) as Dimensão order by Dimensão asc limit 1

#12
